const SquareUp = require('squareup');
const alphanumericRandom = require('alphanumeric-random-string-generator');

export default {
	init(squareApiKey) {
		this.square    = null;
		this.customer  = null;
		this.card      = null;
		this.payment   = null;
		this.square = new SquareUp(squareApiKey);
	},
	createCustomer(customer) {
		var customerObj = {
		        "given_name"        : customer.given_name,
		        "family_name"       : customer.family_name,
		        "email_address"     : customer.email_address,
		        "address": {
		         	"address_line_1": customer.address_line_1,
		            "address_line_2": customer.address_line_2,
		            "locality"      : customer.locality,
		            "postal_code"   : customer.postal_code,
		            "country"       : customer.country
		        },
		        "phone_number": customer.phone_number,
		        "reference_id": alphanumericRandom(32)
		};
		this.square.createCustomer(customerObj, function(err, customer) {
		    err;
		    this.customer = customer;
		  }
		);
	},
	createCard(card) {
		var cardObj = {
		    "card_nonce": string, //Generated by client-side square up library used for adding customer card details
		    "billing_address": {    
		        "address_line_1"                 : card.billing.address_line_1,
		        "address_line_2"                 : card.billing.address_line_2,    
		        "locality"                       : card.billing.locality,     
		        "administrative_district_level_1": card.billing.administrative_district_level_1,
		    	"postal_code"                    : card.billing.postal_code,   //Required and should be the same as entered in client-side square up library to generate nonce
		    	"country"                        : card.billing.country
		    },
		    "cardholder_name": card.cardholder_name
		};

		this.square.createCustomerCard(this.customer, cardObj, function(err, card) {
		    err;
		    this.card = card;
		  }
		);
	},
	createPayment(data) {
		var charge_details_obj = {
            "shipping_address": {
                "address_line_1"                 : data.shipping.address_line_1,
                "address_line_2"                 : data.shipping.address_line_2,
                "administrative_district_level_1": data.shipping.administrative_district_level_1,
                "locality"                       : data.shipping.locality,
                "postal_code"                    : data.shipping.postal_code,
                "country"                        : data.shipping.country
            },
            "billing_address": {
                "address_line_1"                 : data.billing.address_line_1,
                "address_line_2"                 : data.billing.address_line_2,
                "administrative_district_level_1": data.billing.administrative_district_level_1,
                "locality"                       : data.billing.locality,
                "postal_code"                    : data.billing.postal_code,
                "country"                        : data.billing.country
            },
            "amount_money": ({
                "amount"  : data.amount,
                "currency": data.currency
            }),
            "customer_card_id": this.customer,
            "customer_id"     : this.card,
            "note"            : null,
            "delay_capture"   : false
        };

        this.square.charge(charge_details_obj, function(err, result) {
        	this.payment = result;
        });
	},
	processPayment(data) {
		this.init(data.squareApiKey);
		this.createCustomer(data.customer);
		this.createCard(data.customer);
		this.createPayment(data.customer);
		return this.payment;
	}
}